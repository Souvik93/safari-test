[{"__symbolic":"module","version":3,"metadata":{"GaugeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng-gauge","template":"\n    <section class=\"angular-gauge\" [class.light]=\"lightTheme\">\n      <svg class=\"info\" [attr.viewBox]=\"viewBox\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle *ngIf=\"light\"\n          class=\"red-light\"\n          [class.on]=\"input >= light\"\n          [attr.cx]=\"center\"\n          [attr.cy]=\"Config.LIGHT_Y\"\n          [attr.r]=\"Config.LIGHT_RADIUS\">\n        </circle>\n        <text *ngIf=\"max > Config.MAX_PURE_SCALE_VAL\"\n          class=\"factor\"\n          [attr.x]=\"center\"\n          [attr.y]=\"Config.S_FAC_Y\">\n          x{{scaleFactor}} {{unit}}\n        </text>\n        <text *ngIf=\"showDigital\"\n          class=\"digital\"\n          [attr.x]=\"center\"\n          [attr.y]=\"Config.DIGITAL_Y\">\n          {{input}}\n        </text>\n        <text class=\"unit\" [attr.x]=\"center\" [attr.y]=\"Config.UNIT_Y\">{{unit}}</text>\n      </svg>\n      <svg #gauge [attr.viewBox]=\"viewBox\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"main-arc\" [attr.d]=\"arc\" [attr.stroke-width]=\"Config.ARC_STROKE\" fill=\"none\" />\n        <path *ngFor=\"let arc of sectorArcs\"\n          [attr.d]=\"arc.path\"\n          [attr.stroke]=\"arc.color\"\n          [attr.stroke-width]=\"Config.ARC_STROKE\"\n          fill=\"none\" />\n        <line *ngFor=\"let line of scaleLines\"\n          [attr.stroke-width]=\"Config.SL_WIDTH\"\n          [attr.stroke]=\"line.color || (!lightTheme ? '#333' : '#fff')\"\n          [attr.x1]=\"line.from.x\"\n          [attr.y1]=\"line.from.y\"\n          [attr.x2]=\"line.to.x\"\n          [attr.y2]=\"line.to.y\" />\n        <text *ngFor=\"let val of scaleValues\"\n          class=\"text-val\"\n          dominant-baseline=\"central\"\n          [attr.x]=\"val.coor.x\"\n          [attr.y]=\"val.coor.y\"\n          [attr.transform]=\"'rotate(' + gaugeRotationAngle + ', ' + val.coor.x + ', ' + val.coor.y + ')'\">\n          {{val.text}}\n        </text>\n        <rect #arrow\n          class=\"arrow\"\n          [attr.x]=\"center - Config.ARROW_WIDTH / 2\"\n          [attr.y]=\"Config.ARROW_Y\"\n          [attr.height]=\"center - Config.ARROW_Y\"\n          [attr.width]=\"Config.ARROW_WIDTH\"\n          [attr.rx]=\"Config.ARROW_WIDTH / 2\"\n          [attr.ry]=\"Config.ARROW_WIDTH / 2\">\n        </rect>\n        <circle class=\"arrow-pin\" [attr.cx]=\"center\" [attr.cy]=\"center\" [attr.r]=\"Config.ARROW_PIN_RAD\" />\n      </svg>\n    </section>\n  ","styles":["\n    @font-face {\n      font-family: 'Orbitron';\n      font-style: normal;\n      font-weight: 700;\n      src: local('Orbitron Bold'), local('Orbitron-Bold'), url(https://fonts.gstatic.com/s/orbitron/v8/Y82YH_MJJWnsH2yUA5AuYY4P5ICox8Kq3LLUNMylGO4.woff2) format('woff2');\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\n    }\n\n    .angular-gauge {\n      position: relative;\n      width: 400px;\n    }\n\n    .angular-gauge svg.info {\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    .angular-gauge rect.arrow {\n      transform-origin: 50% 100%;\n      fill: orange;\n    }\n\n    .angular-gauge text {\n      font-family: 'Orbitron', sans-serif;\n      font-weight: bold;\n      text-anchor: middle;\n      fill: #333;\n    }\n\n    .angular-gauge.light text {\n      fill: #fff;\n    }\n\n    .angular-gauge text.text-val {\n      font-size: 12px;\n    }\n\n    .angular-gauge circle.arrow-pin {\n      fill: #333;\n    }\n\n    .angular-gauge path.main-arc {\n      stroke: #333;\n    }\n\n    .angular-gauge.light path.main-arc {\n      stroke: #fff;\n    }\n\n    .angular-gauge text.factor {\n      font-size: 7px;\n    }\n\n    .angular-gauge text.digital {\n      font-size: 16px;\n    }\n\n    .angular-gauge text.unit {\n      font-size: 10px;\n    }\n\n    .angular-gauge circle.red-light {\n      fill: #ff4f4f;\n      opacity: 0.1;\n    }\n\n    .angular-gauge circle.red-light.on {\n      opacity: 1;\n    }\n\n  "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"gauge":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["gauge"]}]}],"arrow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["arrow"]}]}],"start":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"end":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"max":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"sectors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"unit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showDigital":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"light":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"lightTheme":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"factor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"}]}],"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"_arc":[{"__symbolic":"method"}],"_getAngleCoor":[{"__symbolic":"method"}],"_calculateSectors":[{"__symbolic":"method"}],"_updateArrowPos":[{"__symbolic":"method"}],"_rotateGauge":[{"__symbolic":"method"}],"_determineScaleFactor":[{"__symbolic":"method"}],"_determineLineFrequency":[{"__symbolic":"method"}],"_isSeparatorReached":[{"__symbolic":"method"}],"_createScale":[{"__symbolic":"method"}],"_getScaleLineColor":[{"__symbolic":"method"}],"_addScaleLine":[{"__symbolic":"method"}],"_addScaleValue":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"GaugeComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng-gauge","template":"\n    <section class=\"angular-gauge\" [class.light]=\"lightTheme\">\n      <svg class=\"info\" [attr.viewBox]=\"viewBox\" xmlns=\"http://www.w3.org/2000/svg\">\n        <circle *ngIf=\"light\"\n          class=\"red-light\"\n          [class.on]=\"input >= light\"\n          [attr.cx]=\"center\"\n          [attr.cy]=\"Config.LIGHT_Y\"\n          [attr.r]=\"Config.LIGHT_RADIUS\">\n        </circle>\n        <text *ngIf=\"max > Config.MAX_PURE_SCALE_VAL\"\n          class=\"factor\"\n          [attr.x]=\"center\"\n          [attr.y]=\"Config.S_FAC_Y\">\n          x{{scaleFactor}} {{unit}}\n        </text>\n        <text *ngIf=\"showDigital\"\n          class=\"digital\"\n          [attr.x]=\"center\"\n          [attr.y]=\"Config.DIGITAL_Y\">\n          {{input}}\n        </text>\n        <text class=\"unit\" [attr.x]=\"center\" [attr.y]=\"Config.UNIT_Y\">{{unit}}</text>\n      </svg>\n      <svg #gauge [attr.viewBox]=\"viewBox\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path class=\"main-arc\" [attr.d]=\"arc\" [attr.stroke-width]=\"Config.ARC_STROKE\" fill=\"none\" />\n        <path *ngFor=\"let arc of sectorArcs\"\n          [attr.d]=\"arc.path\"\n          [attr.stroke]=\"arc.color\"\n          [attr.stroke-width]=\"Config.ARC_STROKE\"\n          fill=\"none\" />\n        <line *ngFor=\"let line of scaleLines\"\n          [attr.stroke-width]=\"Config.SL_WIDTH\"\n          [attr.stroke]=\"line.color || (!lightTheme ? '#333' : '#fff')\"\n          [attr.x1]=\"line.from.x\"\n          [attr.y1]=\"line.from.y\"\n          [attr.x2]=\"line.to.x\"\n          [attr.y2]=\"line.to.y\" />\n        <text *ngFor=\"let val of scaleValues\"\n          class=\"text-val\"\n          dominant-baseline=\"central\"\n          [attr.x]=\"val.coor.x\"\n          [attr.y]=\"val.coor.y\"\n          [attr.transform]=\"'rotate(' + gaugeRotationAngle + ', ' + val.coor.x + ', ' + val.coor.y + ')'\">\n          {{val.text}}\n        </text>\n        <rect #arrow\n          class=\"arrow\"\n          [attr.x]=\"center - Config.ARROW_WIDTH / 2\"\n          [attr.y]=\"Config.ARROW_Y\"\n          [attr.height]=\"center - Config.ARROW_Y\"\n          [attr.width]=\"Config.ARROW_WIDTH\"\n          [attr.rx]=\"Config.ARROW_WIDTH / 2\"\n          [attr.ry]=\"Config.ARROW_WIDTH / 2\">\n        </rect>\n        <circle class=\"arrow-pin\" [attr.cx]=\"center\" [attr.cy]=\"center\" [attr.r]=\"Config.ARROW_PIN_RAD\" />\n      </svg>\n    </section>\n  ","styles":["\n    @font-face {\n      font-family: 'Orbitron';\n      font-style: normal;\n      font-weight: 700;\n      src: local('Orbitron Bold'), local('Orbitron-Bold'), url(https://fonts.gstatic.com/s/orbitron/v8/Y82YH_MJJWnsH2yUA5AuYY4P5ICox8Kq3LLUNMylGO4.woff2) format('woff2');\n      unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2212, U+2215;\n    }\n\n    .angular-gauge {\n      position: relative;\n      width: 400px;\n    }\n\n    .angular-gauge svg.info {\n      position: absolute;\n      top: 0;\n      left: 0;\n    }\n\n    .angular-gauge rect.arrow {\n      transform-origin: 50% 100%;\n      fill: orange;\n    }\n\n    .angular-gauge text {\n      font-family: 'Orbitron', sans-serif;\n      font-weight: bold;\n      text-anchor: middle;\n      fill: #333;\n    }\n\n    .angular-gauge.light text {\n      fill: #fff;\n    }\n\n    .angular-gauge text.text-val {\n      font-size: 12px;\n    }\n\n    .angular-gauge circle.arrow-pin {\n      fill: #333;\n    }\n\n    .angular-gauge path.main-arc {\n      stroke: #333;\n    }\n\n    .angular-gauge.light path.main-arc {\n      stroke: #fff;\n    }\n\n    .angular-gauge text.factor {\n      font-size: 7px;\n    }\n\n    .angular-gauge text.digital {\n      font-size: 16px;\n    }\n\n    .angular-gauge text.unit {\n      font-size: 10px;\n    }\n\n    .angular-gauge circle.red-light {\n      fill: #ff4f4f;\n      opacity: 0.1;\n    }\n\n    .angular-gauge circle.red-light.on {\n      opacity: 1;\n    }\n\n  "],"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation"},"member":"None"}}]}],"members":{"gauge":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["gauge"]}]}],"arrow":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["arrow"]}]}],"start":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"end":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"max":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"sectors":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"unit":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"showDigital":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"light":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"lightTheme":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"factor":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"Renderer2"}]}],"input":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"_arc":[{"__symbolic":"method"}],"_getAngleCoor":[{"__symbolic":"method"}],"_calculateSectors":[{"__symbolic":"method"}],"_updateArrowPos":[{"__symbolic":"method"}],"_rotateGauge":[{"__symbolic":"method"}],"_determineScaleFactor":[{"__symbolic":"method"}],"_determineLineFrequency":[{"__symbolic":"method"}],"_isSeparatorReached":[{"__symbolic":"method"}],"_createScale":[{"__symbolic":"method"}],"_getScaleLineColor":[{"__symbolic":"method"}],"_addScaleLine":[{"__symbolic":"method"}],"_addScaleValue":[{"__symbolic":"method"}]}}}}]